
import java.awt.Font;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JLabel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 * MyBookings Frame to show a seller what are the different bookings on his property
 * @author User
 */
public class MyBookings extends javax.swing.JFrame {

    private Seller seller;
    private Agence agence;
    private ArrayList<JLabel> arraylistLabel = new ArrayList<>();
    private ArrayList<JButton> arraylistConfirm = new ArrayList<>();
    private ArrayList<JButton> arraylistDelete = new ArrayList<>();
    private ArrayList<Booking> myBookingList = new ArrayList<>();
    

    private int counter = 0;

    /**
     * Constructor with the seller to only show his bookings and agence to get the data
     * @param agence
     * @param seller
     */
    public MyBookings(Agence agence, Seller seller) {
        initComponents();
        this.agence = agence;
        this.seller = seller;
        sellerName.setText(seller.getNom() + " " + seller.getPrenom());
        String id = String.valueOf(seller.getID());

        Font font = new Font("Arial", Font.BOLD, 16);

        sellerID.setText("ID : " + id);

        myBookings.setFont(font);
        myBookings.setText("My current bookings");

        manageMyBooking.setFont(font);
        manageMyBooking.setText("Manage my bookings");

        arraylistLabel.add(booking1);
        arraylistLabel.add(booking2);
        arraylistLabel.add(booking3);
        arraylistLabel.add(booking4);
        arraylistLabel.add(booking5);
        arraylistLabel.add(booking6);
        arraylistLabel.add(booking7);
        arraylistLabel.add(booking8);
        arraylistLabel.add(booking9);
        arraylistLabel.add(booking10);

        arraylistConfirm.add(confirm1);
        arraylistConfirm.add(confirm2);
        arraylistConfirm.add(confirm3);
        arraylistConfirm.add(confirm4);
        arraylistConfirm.add(confirm5);
        arraylistConfirm.add(confirm6);
        arraylistConfirm.add(confirm7);
        arraylistConfirm.add(confirm8);
        arraylistConfirm.add(confirm9);
        arraylistConfirm.add(confirm10);

        arraylistDelete.add(delete1);
        arraylistDelete.add(delete2);
        arraylistDelete.add(delete3);
        arraylistDelete.add(delete4);
        arraylistDelete.add(delete5);
        arraylistDelete.add(delete6);
        arraylistDelete.add(delete7);
        arraylistDelete.add(delete8);
        arraylistDelete.add(delete9);
        arraylistDelete.add(delete10);

        for (int i = 0; i < agence.getArraylistBooking().size(); ++i) {
            if (agence.getArraylistBooking().get(i).getProperty().getProprio().equals(seller.getNom())) {
                myBookingList.add(new Booking(agence.getArraylistBooking().get(i).getDate(), agence, agence.getArraylistBooking().get(i).getBuyer(), agence.getArraylistBooking().get(i).getProperty()));
            }
        }

        for (int j = 0; j < myBookingList.size(); ++j) {
            arraylistLabel.get(j).setText("<html> Booking " + (j + 1) + "<br>" + "date : " + myBookingList.get(j).getDate()
                    + "<br>" + "Buyer : " + myBookingList.get(j).getBuyer().getNom() + " " + myBookingList.get(j).getBuyer().getPrenom()
                    + "<br>" + "Adress : " + myBookingList.get(j).getProperty().getAdress()
                    + "<br>" + "Property ID : " + myBookingList.get(j).getProperty().getID());
            arraylistLabel.get(j).setVisible(true);
            arraylistConfirm.get(j).setVisible(true);
            arraylistDelete.get(j).setVisible(true);
        }

        for (int k = myBookingList.size(); k < arraylistLabel.size(); ++k) {
            arraylistLabel.get(k).setVisible(false);
            arraylistConfirm.get(k).setVisible(false);
            arraylistDelete.get(k).setVisible(false);
        }

    }

    /**
     * Constructor without arguments
     */
    public MyBookings() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        sellerName = new javax.swing.JLabel();
        sellerID = new javax.swing.JLabel();
        goBack = new javax.swing.JButton();
        booking1 = new javax.swing.JLabel();
        booking2 = new javax.swing.JLabel();
        booking3 = new javax.swing.JLabel();
        booking4 = new javax.swing.JLabel();
        booking5 = new javax.swing.JLabel();
        booking6 = new javax.swing.JLabel();
        booking7 = new javax.swing.JLabel();
        booking8 = new javax.swing.JLabel();
        booking9 = new javax.swing.JLabel();
        booking10 = new javax.swing.JLabel();
        confirm1 = new javax.swing.JButton();
        confirm2 = new javax.swing.JButton();
        confirm3 = new javax.swing.JButton();
        confirm4 = new javax.swing.JButton();
        confirm5 = new javax.swing.JButton();
        confirm6 = new javax.swing.JButton();
        confirm7 = new javax.swing.JButton();
        confirm8 = new javax.swing.JButton();
        confirm9 = new javax.swing.JButton();
        confirm10 = new javax.swing.JButton();
        myBookings = new javax.swing.JLabel();
        manageMyBooking = new javax.swing.JLabel();
        delete1 = new javax.swing.JButton();
        delete2 = new javax.swing.JButton();
        delete3 = new javax.swing.JButton();
        delete4 = new javax.swing.JButton();
        delete5 = new javax.swing.JButton();
        delete6 = new javax.swing.JButton();
        delete7 = new javax.swing.JButton();
        delete8 = new javax.swing.JButton();
        delete9 = new javax.swing.JButton();
        delete10 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        sellerName.setText("jLabel12");

        sellerID.setText("jLabel12");

        goBack.setText("Go back to Sellers Menu");
        goBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackActionPerformed(evt);
            }
        });

        booking1.setText("jLabel12");

        booking2.setText("jLabel12");

        booking3.setText("jLabel12");

        booking4.setText("jLabel12");

        booking5.setText("jLabel12");

        booking6.setText("jLabel12");

        booking7.setText("jLabel12");

        booking8.setText("jLabel12");

        booking9.setText("jLabel12");

        booking10.setText("jLabel12");

        confirm1.setText("Confirm");
        confirm1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirm1ActionPerformed(evt);
            }
        });

        confirm2.setText("Confirm");

        confirm3.setText("Confirm");

        confirm4.setText("Confirm");

        confirm5.setText("Confirm");

        confirm6.setText("Confirm");

        confirm7.setText("Confirm");

        confirm8.setText("Confirm");

        confirm9.setText("Confirm");

        confirm10.setText("Confirm");

        myBookings.setText("jLabel12");

        manageMyBooking.setText("jLabel12");

        delete1.setText("Delete");
        delete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete1ActionPerformed(evt);
            }
        });

        delete2.setText("Delete");
        delete2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete2ActionPerformed(evt);
            }
        });

        delete3.setText("Delete");
        delete3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete3ActionPerformed(evt);
            }
        });

        delete4.setText("Delete");
        delete4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete4ActionPerformed(evt);
            }
        });

        delete5.setText("Delete");
        delete5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete5ActionPerformed(evt);
            }
        });

        delete6.setText("Delete");
        delete6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete6ActionPerformed(evt);
            }
        });

        delete7.setText("Delete");
        delete7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete7ActionPerformed(evt);
            }
        });

        delete8.setText("Delete");
        delete8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete8ActionPerformed(evt);
            }
        });

        delete9.setText("Delete");
        delete9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete9ActionPerformed(evt);
            }
        });

        delete10.setText("Delete");
        delete10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(sellerName, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                        .addComponent(sellerID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(booking10, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(booking9, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(booking8, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(booking7, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(booking6, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(booking5, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(booking4, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(booking3, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(booking2, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(booking1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(myBookings, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(goBack, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(confirm1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirm2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirm3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirm4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirm5, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirm6, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirm7, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirm8, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirm9, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirm10, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(delete10, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delete9, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delete8, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delete7, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delete6, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delete5, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delete4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delete3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delete2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delete1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(manageMyBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(goBack, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(sellerName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sellerID)))
                .addGap(74, 74, 74)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(myBookings)
                    .addComponent(manageMyBooking))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booking1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirm1)
                    .addComponent(delete1))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booking2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirm2)
                    .addComponent(delete2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booking3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirm3)
                    .addComponent(delete3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booking4, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirm4)
                    .addComponent(delete4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booking5, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirm5)
                    .addComponent(delete5))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booking6, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirm6)
                    .addComponent(delete6))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booking7, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirm7)
                    .addComponent(delete7))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booking8, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirm8)
                    .addComponent(delete8))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booking9, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirm9)
                    .addComponent(delete9))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booking10, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirm10)
                    .addComponent(delete10))
                .addContainerGap(382, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 713, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void goBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackActionPerformed
        // TODO add your handling code here:
        SellerInterface sellerinterface = new SellerInterface(agence, seller);
        sellerinterface.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_goBackActionPerformed

    private void confirm1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirm1ActionPerformed
        seller.getConfirmedBookings().add(myBookingList.get(0));
    }//GEN-LAST:event_confirm1ActionPerformed

    private void delete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete1ActionPerformed
        try {
            try {
                // TODO add your handling code here:
                agence.deleteBooking(myBookingList.get(0).getBuyer().getID(), myBookingList.get(0).getProperty().getID());
            } catch (SQLException ex) {
                Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
            }
            DeletedPropertySeller deletedPropertySeller;
            deletedPropertySeller = new DeletedPropertySeller(agence, seller, "booking");

            deletedPropertySeller.setVisible(true);
            this.dispose();
        } catch (InterruptedException ex) {
            Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_delete1ActionPerformed

    private void delete2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete2ActionPerformed
        try {
            try {
                // TODO add your handling code here:
                agence.deleteBooking(myBookingList.get(1).getBuyer().getID(), myBookingList.get(1).getProperty().getID());
            } catch (SQLException ex) {
                Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
            }
            DeletedPropertySeller deletedPropertySeller;
            deletedPropertySeller = new DeletedPropertySeller(agence, seller, "booking");

            deletedPropertySeller.setVisible(true);
            this.dispose();
        } catch (InterruptedException ex) {
            Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
        }
     }//GEN-LAST:event_delete2ActionPerformed

    private void delete3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete3ActionPerformed
        try {
            try {
                // TODO add your handling code here:
                agence.deleteBooking(myBookingList.get(2).getBuyer().getID(), myBookingList.get(2).getProperty().getID());
            } catch (SQLException ex) {
                Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
            }
            DeletedPropertySeller deletedPropertySeller;
            deletedPropertySeller = new DeletedPropertySeller(agence, seller, "booking");

            deletedPropertySeller.setVisible(true);
            this.dispose();
        } catch (InterruptedException ex) {
            Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
        }
     }//GEN-LAST:event_delete3ActionPerformed

    private void delete4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete4ActionPerformed
        try {
            try {
                // TODO add your handling code here:
                agence.deleteBooking(myBookingList.get(3).getBuyer().getID(), myBookingList.get(3).getProperty().getID());
            } catch (SQLException ex) {
                Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
            }
            DeletedPropertySeller deletedPropertySeller;
            deletedPropertySeller = new DeletedPropertySeller(agence, seller, "booking");

            deletedPropertySeller.setVisible(true);
            this.dispose();
        } catch (InterruptedException ex) {
            Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
        }
     }//GEN-LAST:event_delete4ActionPerformed

    private void delete5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete5ActionPerformed
        try {
            try {
                // TODO add your handling code here:
                agence.deleteBooking(myBookingList.get(4).getBuyer().getID(), myBookingList.get(4).getProperty().getID());
            } catch (SQLException ex) {
                Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
            }
            DeletedPropertySeller deletedPropertySeller;
            deletedPropertySeller = new DeletedPropertySeller(agence, seller, "booking");

            deletedPropertySeller.setVisible(true);
            this.dispose();
        } catch (InterruptedException ex) {
            Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
        }
     }//GEN-LAST:event_delete5ActionPerformed

    private void delete6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete6ActionPerformed
try {
            try {
                // TODO add your handling code here:
                agence.deleteBooking(myBookingList.get(5).getBuyer().getID(), myBookingList.get(5).getProperty().getID());
            } catch (SQLException ex) {
                Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
            }
            DeletedPropertySeller deletedPropertySeller;
            deletedPropertySeller = new DeletedPropertySeller(agence, seller, "booking");

            deletedPropertySeller.setVisible(true);
            this.dispose();
        } catch (InterruptedException ex) {
            Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
        }
            }//GEN-LAST:event_delete6ActionPerformed

    private void delete7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete7ActionPerformed
try {
            try {
                // TODO add your handling code here:
                agence.deleteBooking(myBookingList.get(6).getBuyer().getID(), myBookingList.get(6).getProperty().getID());
            } catch (SQLException ex) {
                Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
            }
            DeletedPropertySeller deletedPropertySeller;
            deletedPropertySeller = new DeletedPropertySeller(agence, seller, "booking");

            deletedPropertySeller.setVisible(true);
            this.dispose();
        } catch (InterruptedException ex) {
            Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
        }
            }//GEN-LAST:event_delete7ActionPerformed

    private void delete8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete8ActionPerformed
try {
            try {
                // TODO add your handling code here:
                agence.deleteBooking(myBookingList.get(7).getBuyer().getID(), myBookingList.get(7).getProperty().getID());
            } catch (SQLException ex) {
                Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
            }
            DeletedPropertySeller deletedPropertySeller;
            deletedPropertySeller = new DeletedPropertySeller(agence, seller, "booking");

            deletedPropertySeller.setVisible(true);
            this.dispose();
        } catch (InterruptedException ex) {
            Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
        }
            }//GEN-LAST:event_delete8ActionPerformed

    private void delete9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete9ActionPerformed
try {
            try {
                // TODO add your handling code here:
                agence.deleteBooking(myBookingList.get(8).getBuyer().getID(), myBookingList.get(8).getProperty().getID());
            } catch (SQLException ex) {
                Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
            }
            DeletedPropertySeller deletedPropertySeller;
            deletedPropertySeller = new DeletedPropertySeller(agence, seller, "booking");

            deletedPropertySeller.setVisible(true);
            this.dispose();
        } catch (InterruptedException ex) {
            Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
        }
            }//GEN-LAST:event_delete9ActionPerformed

    private void delete10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete10ActionPerformed
try {
            try {
                // TODO add your handling code here:
                agence.deleteBooking(myBookingList.get(9).getBuyer().getID(), myBookingList.get(9).getProperty().getID());
            } catch (SQLException ex) {
                Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
            }
            DeletedPropertySeller deletedPropertySeller;
            deletedPropertySeller = new DeletedPropertySeller(agence, seller, "booking");

            deletedPropertySeller.setVisible(true);
            this.dispose();
        } catch (InterruptedException ex) {
            Logger.getLogger(MyBookings.class.getName()).log(Level.SEVERE, null, ex);
        }
            }//GEN-LAST:event_delete10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyBookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyBookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyBookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyBookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyBookings().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel booking1;
    private javax.swing.JLabel booking10;
    private javax.swing.JLabel booking2;
    private javax.swing.JLabel booking3;
    private javax.swing.JLabel booking4;
    private javax.swing.JLabel booking5;
    private javax.swing.JLabel booking6;
    private javax.swing.JLabel booking7;
    private javax.swing.JLabel booking8;
    private javax.swing.JLabel booking9;
    private javax.swing.JButton confirm1;
    private javax.swing.JButton confirm10;
    private javax.swing.JButton confirm2;
    private javax.swing.JButton confirm3;
    private javax.swing.JButton confirm4;
    private javax.swing.JButton confirm5;
    private javax.swing.JButton confirm6;
    private javax.swing.JButton confirm7;
    private javax.swing.JButton confirm8;
    private javax.swing.JButton confirm9;
    private javax.swing.JButton delete1;
    private javax.swing.JButton delete10;
    private javax.swing.JButton delete2;
    private javax.swing.JButton delete3;
    private javax.swing.JButton delete4;
    private javax.swing.JButton delete5;
    private javax.swing.JButton delete6;
    private javax.swing.JButton delete7;
    private javax.swing.JButton delete8;
    private javax.swing.JButton delete9;
    private javax.swing.JButton goBack;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel manageMyBooking;
    private javax.swing.JLabel myBookings;
    private javax.swing.JLabel sellerID;
    private javax.swing.JLabel sellerName;
    // End of variables declaration//GEN-END:variables
}
